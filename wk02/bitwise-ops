BITWISE OPERATIONS:
- AND &
0 & 1 = 0
1 & 0 = 0
0 & 0 = 0
1 & 1 = 1
- OR |
0 | 1 = 1
1 | 0 = 1
0 | 0 = 0
1 | 1 = 1
- XOR ^ = exclusive OR
0 ^ 1 = 1
1 ^ 0 = 1
0 ^ 0 = 0
1 ^ 1 = 0
- NEGATE ~
~0 = 1
~1 = 0
- LEFT SHIFT << 
0001 << 2 = 0100
- RIGHT SHIFT >>
0100 >> 2 = 0001
0001 >> 2 = 0000


TUTORIAL QUESTION 3:
uint16_t a = 0x5555, b = 0xAAAA, c = 0x0001;

a = 0101 0101 0101 0101 -> 0x5555
b = 1010 1010 1010 1010 -> 0xAAAA
c = 0000 0000 0000 0001 -> 0x0001

a | b (bitwise OR)
0101 0101 0101 0101
1010 1010 1010 1010 |
-----------------------
1111 1111 1111 1111

a & b (bitwise AND)
0101 0101 0101 0101
1010 1010 1010 1010 &
-----------------------
0000 0000 0000 0000


a ^ b (bitwise XOR)
0101 0101 0101 0101
1010 1010 1010 1010 ^
-----------------------
1111 1111 1111 1111

~b 
1010 1010 1010 1010 ~
-----------------------
0101 0101 0101 0101

c << 6 (left shift)
1111 0000 0000 0001 << 6
--------------------------
0000 0000 0100 0000

a >> 4 (right shift)
0101 0101 0101 0101 >> 4
-------------------------
0000 0101 0101 0101

b >> 4 (right shift)
1010 1010 1010 1010 >> 4
--------------------------
1111 1010 1010 1010


a & (b << 1)

b | c

a & ~c